set shell sh


map . set hidden!
set ratios '1:2:5'
set cleaner ~/.config/lf/lf_kitty_clean
set previewer ~/.config/lf/lf_kitty_preview

set wrapscroll true

map m
map o
map "'"
map '"'
map d
map c
map e edit
map F preview

cmd edit $nvim $f

cmd preview ${{
  case $f in
  *.png) kitty @ launch --type=overlay kitten icat --hold "$f" ;;
  *.jpg) kitty @ launch --type=overlay kitten icat --hold "$f" ;;
  *.jpeg) kitty @ launch --type=overlay kitten icat --hold "$f" ;;
  *.webp) kitty @ launch --type=overlay kitten icat --hold "$f" ;;
  *.md) cat "$f" | gum format --type="markdown" | bat --wrap=auto --color=always --theme=base16 --style=full ;;
  *.json) cat "$f" | jq -C | bat --wrap=auto --color=always --style=full --theme=base16 --italic-text=always ;;
  *.jsonc) cat "$f" | jq -C | bat --wrap=auto --color=always --style=full --theme=base16 --italic-text=always ;;
  *) kitty @ launch --type=overlay bat --wrap=auto --color=always --style=full --theme=base16 --italic-text=always $f ;;
  esac
  }}

cmd fzf_jump ${{
  res="$(find . -maxdepth 5 | fzf --reverse --header='Jump to location')"
  if [ -f "$res" ]; then
    cmd="select"
  elif [ -d "$res" ]; then
    cmd="cd"
  fi
  lf -remote "send $id $cmd \"$res\""
}}

# define a custom 'open' command
# This command is called when current file is not a directory. You may want to
# use either file extensions and/or mime types here. Below uses an editor for
# text files and a file opener for the rest.
cmd open &{{
    case $(file --mime-type -Lb $f) in
        text/*) lf -remote "send $id \$nvim \$fx";;
        application/json) lf -remote "send $id \$nvim \$fx";;
        application/gzip) tar -xzvf $f;;
        *) for f in $fx; do $nvim $f > /dev/null 2> /dev/null & done;;
    esac
}}

# mkdir command. See wiki if you want it to select created dir
map a :push %mkdir<space>
map t :push %touch<space>
# define a custom 'rename' command without prompt for overwrite
cmd rename %[ -e $1 ] && printf "file exists" || mv $f $1
map r push :rename<space>

# Basic Functions
map s shell
map DD delete
map p paste
map y copy
map <enter> open
map R reload

map U unselect

map f fzf_jump

map dd cut
map dD delete

# execute current file (must be executable)
map x $$f
map X !$f

# extract the current file with the right command
# (xkcd link: https://xkcd.com/1168/)
cmd extract ${{
    set -f
    case $f in
        *.tar.bz|*.tar.bz2|*.tbz|*.tbz2) tar xjvf $f;;
        *.tar.gz|*.tgz) tar xzvf $f;;
        *.tar.xz|*.txz) tar xJvf $f;;
        *.zip) unzip $f;;
        *.rar) unrar x $f;;
        *.7z) 7z x $f;;
    esac
}}

# compress current file or selected files with tar and gunzip
cmd tar ${{
    set -f
    mkdir $1
    cp -r $fx $1
    tar czf $1.tar.gz $1
    rm -rf $1
}}

# compress current file or selected files with zip
cmd zip ${{
    set -f
    mkdir $1
    cp -r $fx $1
    zip -r $1.zip $1
    rm -rf $1
}}
